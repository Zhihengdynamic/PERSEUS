# SAMPLE PERSEUS CONFIG FILE

# Any settings that should be kept private can be put in a local "shadow.yaml"
# file that follows the same 3-part format as this document.  Adding the key with
# the value "shadow" in this file is optional, but can be useful for readability.


# PERSEUS SYSTEM SETTINGS

LOGGING_LEVEL: DEBUG

CTRL_STREAM_LEN: 300   # Seconds
UPDATE_FREQ: 10        # Per second

SMS_ENABLED: False
SMS_NAME: PERSEUS Alert
SMS_EMAIL: shadow
SMS_RELAY_PASSWORD: shadow

---

# PERSEUS NETWORK TOPOLOGY
#
# Each node is a separate instance of PERSEUS.py
#
# {$pnode_id}:
#   type: {control|listener|display enum}
#   location: {$loc_string}
#   controller: {$controller_pid}*
#   alert_device: {$device_id}
#
# * If type is control, no controller is required
#   If no controller is listed, the _first_ controller listed is default

control0:
  type: control
  location: Main station
  nameserver: ns0

listener0:
  type: listener
  location: Main station
  controller: control0
  alert_device: dereks_phone

listener1:
  type: listener
  location: Remote patient monitor station
  controller: control0
  alert_device: phone001

display0:
  type: display
  controller: control0
  location: Main station

display1:
  type: display
  controller: control0
  location: Remote data review station


---

# PERSEUS REGISTERED DEVICES
#
# {$device_id}:
#   number: {10-digit str}
#   carrier: {verizon|sprint|etc..}

dereks_phone:
  number: shadow
  carrier: shadow

lisas_phone:
  number: shadow
  carrier: shadow

leos_phone:
  number: shadow
  carrier: shadow

# Assignable devices

phone001:
  number: 5555555555
  carrier: att


---

# PERSEUS ALERT RULES
#
# Rules are matched in given order.
#
# {$rule_name}:
#   priority: {SEVERE|MODERATE|LOW|VERY_LOW}
#   conditions:
#     {$var0}: [{$op0}, {$value0}]
#     {$var1}: [{$op1}, {$value1}]
#
# where $var   is in [ekg, hr, spo2, bp] and
#       $op    is in [<,<=,..<,==,!=,>,>=,..>] and
#       $value is an integer
#
# The ..> and ..< symbols are for "trending above" and "trending below" respectively.

Probably_no_trouble:    # Want to try to match this _before_ calling a "trouble" alert
  priority: VERY_LOW
  conditions:
    <<: *trouble        # Based on 'trouble', but,
    ekg:  ['==',  OK]   # Normal status

Trouble:
  priority: SEVERE
  conditions:    &trouble
    ekg:  ['!=',  OK]   # Abnormal status
    hr:   ['..>', 10]   # Trending above 10
    sp02: ['<',  100]   # Below 100

# Match anything else
All_OK:
  priority: VERY_LOW


